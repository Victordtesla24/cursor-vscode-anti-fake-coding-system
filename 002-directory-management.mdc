---
description: Directory management protocols for code organization
globs: ["**/*"]
alwaysApply: true
---

# Directory Management Protocol

## Objective
Organize, consolidate, and maintain project directory structure according to established conventions, ensuring code clarity, eliminating redundancy, and preserving functionality.

## Pre-Requisites
- Utilize version control (git stash or branch) before significant changes
- Follow error-fixing protocols with absolute precision if errors arise

## Protocol Steps

### 1. Determine & Adhere to Project Structure Conventions
- Identify established directory structure by checking:
  - Known framework conventions (Next.js, Django, Flask)
  - Project documentation (README.md, CONTRIBUTING.md)
  - Existing patterns in majority of codebase
  - Configuration files (.editorconfig, linter configs)
- Ensure compliance with deployment best practices

### 2. Comprehensive File Scan & Inventory
- Recursively scan entire repository
- Build inventory of files, modules, scripts, configurations
- Exclude: node_modules/, .venv/, .git/, .cursor/, .vscode/, build/, dist/, coverage/

### 3. Duplicate/Overlap Detection & Consolidation
**Strict Prohibition:** Never create new file if existing one serves same purpose  
**Detection Methods:**  
- Exact file content matches  
- High code similarity scores  
- Similar filenames or naming patterns  
- Matching function/class signatures  
- Similar import dependencies  

### 4. "No Unrequested Files" Policy
Do NOT create files unless:
- User explicitly requested specific new file
- AI determines creation critically necessary AND confirms with user

### 5. Correct Placement & Reference Updates
- Relocate misplaced files to conform to project structure
- Atomically update ALL references:
  - Code imports/exports
  - Configuration files
  - Build scripts
  - Documentation
  - Test files

## Critical Constraints
- No functionality changes beyond organization/consolidation
- Apply changes in atomic steps with immediate verification
- Always confirm with user before major changes
- Strict adherence to protocol steps
